import allure
from urls import Urls
from pages.main_page import MainPage
from pages.order_feed_page import OrderFeedPage
from logger import logger


@allure.suite("–†–∞–∑–¥–µ–ª '–õ–µ–Ω—Ç–∞ –∑–∞–∫–∞–∑–æ–≤'")
class TestOrderFeed:

    @allure.title("–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞ '–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è' –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –Ω–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞")
    def test_total_orders_counter_increase(self, login):
        logger.info("–ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞: —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞ '–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è'")
        main_page = MainPage(login)
        order_feed_page = OrderFeedPage(login)

        # üîπ –í—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º —Å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        main_page.open_url(Urls.BASE_URL)
        main_page.close_overlay_if_present()

        # üîπ –ü–µ—Ä–µ—Ö–æ–¥ –≤ –ª–µ–Ω—Ç—É –∑–∞–∫–∞–∑–æ–≤
        main_page.click_order_feed()
        assert Urls.FEED_URL in order_feed_page.get_current_url(), "–ù–µ –ø–µ—Ä–µ—à–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤"
        initial_total_orders = order_feed_page.get_total_orders_count()
        logger.info(f"–ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {initial_total_orders}")

        # üîπ –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –∑–∞–∫–∞–∑
        main_page.open_url(Urls.BASE_URL)
        main_page.add_ingredient_to_order()
        main_page.click_order_button()

        assert main_page.is_order_modal_visible(), "–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫–∞–∑–∞ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å"

        order_number = main_page.get_order_number()
        logger.info(f"–°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑ ‚Ññ{order_number}")

        main_page.close_modal()

        # üîπ –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –ª–µ–Ω—Ç—É –∑–∞–∫–∞–∑–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞
        main_page.click_order_feed()
        assert Urls.FEED_URL in order_feed_page.get_current_url(), "–ù–µ –ø–µ—Ä–µ—à–ª–∏ –æ–±—Ä–∞—Ç–Ω–æ –≤ –ª–µ–Ω—Ç—É –∑–∞–∫–∞–∑–æ–≤"
        final_total_orders = order_feed_page.get_total_orders_count()
        logger.info(f"–ö–æ–Ω–µ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: {final_total_orders}")

        assert final_total_orders > initial_total_orders, (
            f"–°—á—ë—Ç—á–∏–∫ –Ω–µ —É–≤–µ–ª–∏—á–∏–ª—Å—è: –±—ã–ª–æ {initial_total_orders}, —Å—Ç–∞–ª–æ {final_total_orders}"
        )

        logger.info("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")

    @allure.title("Mock: –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—á—ë—Ç—á–∏–∫–∞ '–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è'")
    def test_total_orders_counter_increase_mock(self, mock_auth, mock_order_functionality):
        logger.info("–ù–∞—á–∞–ª–æ mock-—Ç–µ—Å—Ç–∞ '–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è'")
        main_page = MainPage(mock_auth)

        # üîπ –ù–∞—á–∏–Ω–∞–µ–º —Å –ª–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤
        main_page.open_url(Urls.FEED_URL)

        main_page.execute_js("sessionStorage.setItem('mockTotalOrders', '1000');")
        initial_total = int(main_page.execute_js("return sessionStorage.getItem('mockTotalOrders');"))

        main_page.execute_js("sessionStorage.setItem('mockTotalOrders', '1001');")
        final_total = int(main_page.execute_js("return sessionStorage.getItem('mockTotalOrders');"))

        assert final_total > initial_total, f"Mock-—Å—á—ë—Ç—á–∏–∫ –Ω–µ —É–≤–µ–ª–∏—á–∏–ª—Å—è: {initial_total} ‚Üí {final_total}"
        logger.info("Mock —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")

    @allure.title("Mock: –ü–æ—è–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ '–í —Ä–∞–±–æ—Ç–µ'")
    def test_order_appears_in_progress_mock(self, mock_auth, mock_order_functionality):
        logger.info("–ù–∞—á–∞–ª–æ mock-—Ç–µ—Å—Ç–∞ '–ó–∞–∫–∞–∑ –≤ —Ä–∞–±–æ—Ç–µ'")
        main_page = MainPage(mock_auth)

        # üîπ –ù–∞—á–∏–Ω–∞–µ–º —Å –ª–µ–Ω—Ç—ã –∑–∞–∫–∞–∑–æ–≤
        main_page.open_url(Urls.FEED_URL)

        mock_order_number = "12345"
        main_page.execute_js(f"""
            const orders = JSON.parse(sessionStorage.getItem('mockOrdersInProgress') || '[]');
            orders.push('{mock_order_number}');
            sessionStorage.setItem('mockOrdersInProgress', JSON.stringify(orders));
        """)

        orders_in_progress = main_page.execute_js(
            "return JSON.parse(sessionStorage.getItem('mockOrdersInProgress') || '[]');"
        )

        assert mock_order_number in orders_in_progress, (
            f"Mock-–∑–∞–∫–∞–∑ {mock_order_number} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ '–í —Ä–∞–±–æ—Ç–µ'"
        )

        logger.info("Mock —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ")
